---
title: Block Domino
---
classDiagram
    IDominoTile <|-- DominoTile
    IPlayer <|-- Player
    IDeck <|-- Deck
    IBoard <|-- Board

    IPlayer "1" --o "0..*" DominoTile
    IDeck "1" --* "0..*" DominoTile
    IBoard "1" --o "0..*" DominoTile
    Game "1" --o "2..4*" IPlayer
    Game "1" --* "1" IBoard
    Game "1" --* "1" IDeck
    Game ..> Side
    IDominoTile ..> Orientation

    class IDominoTile {
        <<Interface>>
        +byte PipLeft
        +byte PipRight
        +bool IsDouble
        +Orientation Orientation
    }
    class DominoTile {
        +byte PipLeft
        +byte PipRight
        +bool IsDouble
        +Orientation Orientation
        +DominoTile(byte PipLeft, byte PipRight)
    }

    class IPlayer {
        <<Interface>>
        +string Name
        +byte Score
        +List~IDominoTile~ Hand
        +PlayDominoTile(IDominoTile dominoTile) : bool
    }

    class Player {
        +string Name
        +byte Score
        +List~IDominoTile~ Hand
        +Player(string name)
        +PlayDominoTile(IDominoTile dominoTile) : bool
    }

    class IDeck {
        <<Interface>>
        +List~IDominoTile~ DominoTiles
    }
    class Deck {
        +List~IDominoTile~ DominoTiles
    }

    class IBoard {
        <<Interface>>
        +List~IDominoTile~ DominoTiles
    }
    class Board {
        +List~IDominoTile~ DominoTiles
    }
    
    class Game {
        -List~IPlayer~ _players
        -IDeck _deck
        -IBoard _board
        -byte _currentTurn
        +Action~IPlayer~ OnGameOver;
        +Game(List~IPlayer~ players, IDeck deck, IBoard board)
        +SetupDeck() : void
        +StartGame() : void
        +ShuffleDeck() : void
        +AddDominoTileToHandPlayer(IPlayer player, List<IDomino> dominos) : void
        +DisplayBoard(): void
        +FirstTurn() : void
        +CheckPlayableDominoPlayerHand(IPlayer player, byte[] openEnds) : void
        +PlayDominoTile(IPlayer player, IDominoTile DominoTile, Side side) : bool
        +NextTurn() : void
        +IsRoundOver() : bool
        +NextRound() : void
        +IsRoundDraw() : bool
        +GameOver() : IPlayer
        +FlipDominoTile(IDominoTile dominoTile) : IDominoTile
        +GetOpenEnds() : byte[]
        -IsDominoTileValid(IDominoTile DominoTile, byte[] openEnds) : bool
        -CalculateScore() : void
        -AddPointToPlayer(IPlayer player) : void
    }

    class Side {
        <<Enum>>
        LEFT
        RIGHT
    }
    class Orientation {
        <<Enum>>
        HORIZONTAL
        VERTICAL
    }